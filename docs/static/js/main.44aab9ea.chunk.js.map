{"version":3,"sources":["componentes/AddCategoria.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","original","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","imagenes","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAG1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAOlB,SACI,uBACIO,YAAY,cACZC,KAAK,OACLC,MAAOV,EACPW,SAtBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCVlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGVC,EAHU,iDAGsCC,UAAUH,GAHhD,8DAIQI,MAAMF,GAJd,cAIVG,EAJU,gBAKOA,EAAUC,OALjB,uBAKRC,EALQ,EAKRA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,SAASZ,QAXjB,kBAeTM,GAfS,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAKA,EAAL,WCHCO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAEtB,ECHwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAE/BsB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OAlBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAKZ,CAACpB,IAGGqB,EDxB4BM,CAAc3B,GAApC4B,EAAb,EAAQrB,KAAgBa,EAAxB,EAAwBA,QAExB,OACI,qCACI,oBAAIJ,UAAU,qCAAd,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,kCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEQY,EAASnB,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdxBkB,EAAe,WAEzB,MAAoC5C,mBAAS,CAAE,mBAA/C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEE,OACG,gCACI,oDACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAEA,6BAEQ8C,EAAWrB,KAAI,SAAAT,GAAS,OACpB,cAAC,EAAD,CAEIA,UAAWA,GADNA,Y,MCXjC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.44aab9ea.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nexport const AddCategoria = ({setCategorias}) => {\r\n\r\n   \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    //evento\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    //Input\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n         if(inputValue.trim().length >2){\r\n            setCategorias(cats => [inputValue,...cats ]);\r\n            setInputValue('');\r\n         }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                placeholder=\"Buscar Gifs\"\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategoria.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","export const getGifs = async (categoria) => {\r\n\r\n    //Crear la categoria y recibir la petición HTTP\r\n       const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=9&api_key=wA9Q7WkHLe1yNJbKDuJrUASl5HdluUNj`;\r\n       const respuesta = await fetch(url);\r\n       const { data } = await respuesta.json();\r\n   \r\n       const gifs = data.map(img => {\r\n           return {\r\n               id: img.id,\r\n               title: img.title,\r\n               url: img.images.original.url\r\n           }\r\n       })\r\n   \r\n       return gifs\r\n   }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt= {title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    const { data:imagenes , loading} = useFetchGifs( categoria );\r\n \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn \">{categoria}</h3>\r\n\r\n            {loading && <p className=\"animate__animate animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    imagenes.map(img =>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    //Petición HTTP\r\n    useEffect(() => {\r\n\r\n        getGifs(categoria)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                }, 1000);\r\n\r\n            });\r\n\r\n\r\n    }, [categoria])\r\n\r\n\r\n    return state; \r\n}","import React, { useState } from 'react'\r\nimport { AddCategoria } from './componentes/AddCategoria';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   const [categorias, setCategorias] = useState([ 'Adventure Time' ]);\r\n\r\n     return (\r\n        <div>\r\n            <h2>The Gif Expert App</h2>\r\n            <AddCategoria setCategorias={setCategorias}/>\r\n            <hr/>\r\n                      \r\n            <ol>\r\n                { \r\n                    categorias.map(categoria =>\r\n                        <GifGrid\r\n                            key={categoria}\r\n                            categoria={categoria}/>\r\n                    )}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}